CREATE TABLE "mytable" (
  "-- transactions table" text
);

INSERT INTO "mytable" ("-- transactions table")
VALUES
('CREATE TABLE transactions ('),
('buyer_id INT'),
('purchase_time DATETIME'),
('refund_time DATETIME'),
('store_id VARCHAR(10)'),
('item_id VARCHAR(10)'),
('gross_transaction_value DECIMAL(10'),
(');'),
('-- items table'),
('CREATE TABLE items ('),
('store_id VARCHAR(10)'),
('item_id VARCHAR(10)'),
('item_category VARCHAR(255)'),
('item_name VARCHAR(255)'),
(');'),
('-- data insert'),
('INSERT INTO transactions (buyer_id'),
('(3'),
('(12'),
('(3'),
('(2'),
('(1'),
('(8'),
('(5'),
('INSERT INTO items (store_id'),
('(''a'''),
('(''a'''),
('(''f'''),
('(''f'''),
('(''f'''),
('(''d'''),
('(''b'''),
('-- 1st query'),
('SELECT'),
('strftime(''%Y-%m'''),
('COUNT(*) AS purchase_count                   -- Count purchases FROM transactions'),
('WHERE'),
('refund_time IS NULL                      -- Exclude refunded purchases'),
('GROUP BY month                 -- Group by month'),
('ORDER BY month;'),
('--2nd query'),
('SELECT store_id'),
('FROM transactions'),
('WHERE'),
('strftime(''%Y-%m'''),
('AND refund_time IS NULL'),
('GROUP BY'),
('store_id'),
('HAVING'),
('order_count >= 5;                 --stores with at least 5 orders'),
('--3rd query'),
('SELECT store_id'),
('MIN((strftime(''%s'''),
('FROM transactions'),
('WHERE'),
('refund_time IS NOT NULL                                                                                                                                                                                           --consider transactions with a refund'),
('GROUP BY'),
('store_id;'),
('--4th query'),
('WITH FirstOrder AS (SELECT store_id'),
('FROM transactions GROUP BY store_id)'),
('SELECT t.store_id'),
('FROM'),
('transactions t'),
('JOIN'),
('FirstOrder fo ON t.store_id = fo.store_id AND t.purchase_time = fo.first_order_time;'),
('--5th query'),
('WITH FirstPurchase AS (SELECT buyer_id'),
('FROM transactions GROUP BY buyer_id )'),
('SELECT i.item_name'),
('COUNT(*) AS order_count                                                                                                                                                      -- Count the number of times each item was ordered'),
('FROM items i JOIN transactions t ON i.store_id = t.store_id AND i.item_id = t.item_id'),
('JOIN'),
('FirstPurchase fp ON t.buyer_id = fp.buyer_id AND t.purchase_time = fp.first_purchase_time'),
('GROUP BY'),
('i.item_name'),
('ORDER BY'),
('order_count DESC'),
('LIMIT 1;'),
('--6th query'),
('ALTER TABLE transactions ADD COLUMN refund_process_flag VARCHAR(3);'),
('UPDATE transactions'),
('SET refund_process_flag ='),
('CASE'),
('WHEN (strftime(''%s'''),
('ELSE ''No'' -- Refund after 72 hours'),
('END'),
('WHERE'),
('refund_time IS NOT NULL;'),
('--7th query'),
('WITH RankedTransactions AS (SELECT buyer_id'),
('ROW_NUMBER() OVER (PARTITION BY buyer_id ORDER BY purchase_time) AS purchase_rank                                       -- Rank transactions per buyer'),
('FROM transactions'),
('WHERE refund_time IS NULL                                                         -- Ignore refunds'),
(')'),
('SELECT buyer_id'),
('FROM RankedTransactions'),
('WHERE purchase_rank = 2;'),
('--8th query'),
('WITH RankedTransactions AS ('),
('SELECT buyer_id'),
('SELECT'),
('buyer_id'),
('purchase_time'),
('FROM'),
('RankedTransactions'),
('WHERE'),
('transaction_rank = 2;                                                                                      -- Filter for the second transaction');
